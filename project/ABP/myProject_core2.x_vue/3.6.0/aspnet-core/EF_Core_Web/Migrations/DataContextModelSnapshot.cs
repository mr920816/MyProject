// <auto-generated />
using EF_Core_Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using MySql.Data.EntityFrameworkCore.Storage.Internal;
using System;

namespace EF_Core_Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("EF_Core_Web.Models.Company", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Code", "Name");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("EF_Core_Web.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("EF_Core_Web.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql(" NOW()");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Remark");

                    b.Property<int>("deptId");

                    b.Property<string>("flag");

                    b.HasKey("Id");

                    b.HasIndex("deptId");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("EF_Core_Web.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasComputedColumnSql(" Name+','+EnglishName ");

                    b.Property<string>("EnglishName");

                    b.Property<string>("JobName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("t_teacher","my_test");
                });

            modelBuilder.Entity("EF_Core_Web.Models.Student", b =>
                {
                    b.HasBaseType("EF_Core_Web.Models.Person");

                    b.Property<string>("CorceName");

                    b.Property<int>("Mount");

                    b.Property<string>("Url");

                    b.ToTable("Student");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("EF_Core_Web.Models.SuperPerson", b =>
                {
                    b.HasBaseType("EF_Core_Web.Models.Person");

                    b.Property<string>("SupperAtt");

                    b.Property<string>("SupperLog");

                    b.ToTable("SuperPerson");

                    b.HasDiscriminator().HasValue("SuperPerson");
                });

            modelBuilder.Entity("EF_Core_Web.Models.Person", b =>
                {
                    b.HasOne("EF_Core_Web.Models.Department", "department")
                        .WithMany()
                        .HasForeignKey("deptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
